input {
  file {
    # this will have to be changed for the CSV file location
    # 1 entry to test
    path => "/home/bikeride/sample_logs/Crimes_-_One_year_prior_to_present.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  csv {
      separator => ","
      # CASE#,DATE OF OCCURRENCE,BLOCK, IUCR, PRIMARY DESCRIPTION, SECONDARY DESCRIPTION, LOCATION DESCRIPTION,ARREST,DOMESTIC,BEAT,WARD,FBI CD,X COORDINATE,Y COORDINATE,LATITUDE,LONGITUDE,LOCATION
      columns => ["CASE_NUMBER","DATE_OF_OCCURRENCE","BLOCK","IUCR","PRIMARY_DESCRIPTION","SECONDARY_DESCRIPTION","LOCATION_DESCRIPTION","ARREST","DOMESTIC","BEAT","WARD","FBI CD","X_COORDINATE","Y_COORDINATE","LATITUDE","LONGITUDE","LOCATION"]  }
    
  dissect {
    # dissect is MUCH less resource intensive than grok so we'll use it here
    # %{} - drops the value from the event
	# %{dts} %{+dts} %{+dts} will append the values "dts" => "Feb 28 15:34:47" 2018-12-24T14:32:07.251Z

    mapping => {
      # parse out the date componenets in the CSV file
      # this will be used to construct a time stamp to use
	  "message" => '%{},%{month}/%{day}/%{year} %{TIME},%{}' #no geopoint
       }
     }

  mutate {
    add_field => {
      # create the time stamp
      "dts" => "%{year}-%{month}-%{day} %{TIME}"
      }

    # remove some unneeded fields
    # location is not in the best format for mapping so we'll build that out below
    remove_field => ["@timestamp", "LOCATION", "message", day, month, year]

    # create a geo_point data type so we can use mapping visualizations
    # there may be a more correct way to do this but it worked
    # coordinates will be the geo_point filed name
    convert => {"LATITUDE" => "float"}
    convert => {"LONGITUDE" => "float"}
    rename => {"LATITUDE" => "[coordinates][lat]"}
    rename => {"LONGITUDE" => "[coordinates][lon]"}
    convert => { "[coordinates]" => "float" }

  }


}

output {
  elasticsearch {
    hosts => "http://localhost:9200"
    index => "chicago_crime_1year"
  }
  stdout {}
}
