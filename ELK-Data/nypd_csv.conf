input {
  file {
    # this will have to be changed for the CSV file location
    # 1 entry to test
    # path => "/home/bikeride/logstash_logs/nypd_crash1.csv"
    # there's a header that causes an error
    # also there seems to be missing longitude/latitudes that generate an error
    path => "/home/bikeride/logstash_logs/NYPD_Motor_Vehicle_Collisions.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  csv {
      separator => ","
      columns => ["DATE","TIME","BOROUGH","ZIP","LATITUDE","LONGITUDE","LOCATION","street","cross_street","off_street","number_injured","number_killed","peds_injured","peds_killed","cyclist_injured","cyclist_killed","motorist_injured","motorist_killed","contributing_factor_vehicle_1","contributing_factor_vehicle_2","contributing_factor_vehicle_3","contributing_factor_vehicle_4","contributing_factor_vehicle_5","unique_key","vehicle_type_code_1","vehicle_type_code_2","vehicle_type_code_3","vehicle_type_code_4","vehicle_type_code_5"]  }

  dissect {
    # dissect is MUCH less resource intensive than grok so we'll use it here
    # %{} - drops the value from the event
	# %{dts} %{+dts} %{+dts} will append the values "dts" => "Feb 28 15:34:47" 2018-12-24T14:32:07.251Z
	
    mapping => {
      # parse out the date componenets in the CSV file
      # this will be used to construct a time stamp to use
	  "message" => '%{month}/%{day}/%{year},%{}' #no geopoint
       }
  }

  mutate {
    add_field => {
      # create the time stamp
      "dts" => "%{year}-%{month}-%{day} %{TIME}"
      }

    # remove some unneeded fields
    # location is not in the best format for mapping so we'll build that out below
    remove_field => ["@timestamp", "LOCATION", "message", "day","month", "year" ]

    # create a geo_point data type so we can use mapping visualizations and geo searches
    # there may be a more correct way to do this but it worked
    # coordinates will be the geo_point filed name
    convert => {"LATITUDE" => "float"}
    convert => {"LONGITUDE" => "float"}
    rename => {"LATITUDE" => "[coordinates][lat]"}
    rename => {"LONGITUDE" => "[coordinates][lon]"}
    convert => { "[coordinates]" => "float" }

  }


}

output {
  elasticsearch {
    hosts => "http://localhost:9200"
    index => "nypd_crash"
  }
  stdout {}
}

